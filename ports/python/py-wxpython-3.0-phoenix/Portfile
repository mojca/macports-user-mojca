# -*- coding: utf-8; mode: tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2
# $Id$

PortSystem          1.0
PortGroup           python      1.0
PortGroup           wxWidgets   1.0

name                py-wxpython-3.0-phoenix
version             3.0.3.dev1709+30e7d68
set wx_version      [join [lrange [split ${version} .] 0 2] .]
set branch          [join [lrange [split ${version} .] 0 1] .]
categories-append   graphics devel
license             wxwidgets-3.1
# wxWidgets Library License (LGPL derivative)
platforms           darwin
maintainers         mojca openmaintainer

description         Python interface to the wxWidgets ${branch} cross platform GUI

long_description    Phoenix is a new implementation of wxPython focused on improving speed, \
                    maintainability and extensibility. Just like wxPython it wraps the wxWidgets \
                    C++ toolkit and provides access to the UI portions of the wx API, enabling \
                    Python applications to have a GUI on Windows, Macs or Unix systems with a \
                    native look and feel and requiring very little (if any) platform specific code.

homepage            http://wiki.wxpython.org/ProjectPhoenix
#                   http://www.wxpython.org/
master_sites        http://wxpython.org/Phoenix/snapshot-builds/

checksums           rmd160  d53864ed5fa13f741fb99b7e85834fd7cd0d7a72 \
                    sha256  21f233f3baf2ff6c3f95468bf55373729437e52baa33f7ceb2348a5dd1f771dd

python.versions     27 34
python.default_version 34

distname            wxPython_Phoenix
distfiles           ${distname}-${version}${extract.suffix}
worksrcdir          ${distname}-${version}
dist_subdir         wxWidgets/${wx_version}

if {${name} ne ${subport}} {
    conflicts       py${python.version}-wxpython-2.8 \
                    py${python.version}-wxpython-3.0

    # TODO: it would be really nice to split this port into separate wxWidgets and Python part
    # to avoid constant need to recompile wxWidgets and to be able to reuse it for different Python versions
    # wxWidgets.use   wxWidgets-3.0
    # depends_lib-append port:${wxWidgets.port}

    # if we were using external wxWidgets, we would need to add wxdir to PATH:
    # build.env-append PATH=${wxWidgets.wxdir}:$env(PATH)
    # build.cmd        ${python.bin} build.py build_py --use_syswx
    # flags for building universal (not tested yet): --mac_arch=i386,x86_64
    build.cmd       ${python.bin} build.py build
    destroot.cmd    ${python.bin} build.py
    # by default this tries to call --root=${destroot} which throws an error;
    # try to fix this in a different way (destroot.destdir has another argument)
    destroot.destdir --destdir=${destroot}

    livecheck.type  none
} else {
    livecheck.type  regex
    livecheck.url   ${master_sites}
    livecheck.regex wxPython_Phoenix-(3.\[0-9\]+\\.\[0-9\]+\\.dev\[+0-9a-f\]+)${extract.suffix}
}
