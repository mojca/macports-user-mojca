# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           crossgcc 1.0

# keep in sync with x86_64-w64-mingw32-gcc
set mingw_name      w64-mingw32
set mingw_arch      i686
set mingw_target    ${mingw_arch}-${mingw_name}

crossgcc.setup      ${mingw_target} 6.2.0
crossgcc.languages  {c c++ fortran objc obj-c++}
dist_subdir         gcc6

maintainers         mojca openmaintainer

checksums           rmd160  d9154ca51f40ae3ce42950a0476f701a9f86fc95 \
                    sha256  9944589fc722d3e66308c0ce5257788ebd7872982a718aa2516123940671b7c5

depends_lib-append  port:${mingw_target}-binutils \
                    port:${mingw_target}-headers \
                    port:cloog \
                    port:ppl

configure.args-append \
                    --enable-shared \
                    --with-dwarf \
                    --enable-fully-dynamic-string \
                    --enable-libssp \
                    --with-cloog=${prefix} \
                    --with-ppl=${prefix} \
                    --enable-lto \
                    --disable-libcc1
                    # else the following files conflict:
                    # /opt/local/lib/x86_64/libcc1.0.so
                    # /opt/local/lib/x86_64/libcc1.la
                    # /opt/local/lib/x86_64/libcc1.so
configure.args-replace \
                    --enable-multilib \
                    --disable-multilib

# TODO:
#   --enable-version-specific-runtime-libs
#       Installs libgcc/libstdc++ and other target support libraries in such a
#       way that multiple GCC installs can coexist simultaneously.
#       (add once you have the default working as it needs some extra tweaking)
#   --enable-libgomp
#       Enable OpenMP support, it is not enabled by default on MinGW platforms.
#       Requires pthreads-win32 (target) installed.

subport ${mingw_target}-bootstrap {
    # TODO: this is probably a build + runtime dependency
    depends_lib-append  port:${mingw_target}-binutils \
                        port:${mingw_target}-headers

    build.target        all-gcc
    destroot.target     install-gcc
}

# subport ${mingw_target}-libgcc {
#     depends_lib-append  port:${mingw_target}-binutils \
#                         port:${mingw_target}-headers \
#                         port:${mingw_target}-crt
#     depends_build-append \
#                         bin:${mingw_target}-gcc:${mingw_target}-bootstrap
#
#     build.target        all-target-libgcc
#     destroot.target     install-target-libgcc
#     # move libgcc_*.dll to a more suitable place
# }

if {${subport} eq ${name}} {
    depends_lib-append  port:${mingw_target}-binutils \
                        port:${mingw_target}-headers \
                        port:${mingw_target}-crt
    depends_build-append \
                        bin:${mingw_target}-gcc:${mingw_target}-bootstrap

    set mingw_gcc_bootstrap ${mingw_target}-bootstrap
    pre-activate {
        if {![catch {set installed [lindex [registry_active ${mingw_gcc_bootstrap}] 0]}]} {
            registry_deactivate_composite ${mingw_gcc_bootstrap} "" [list ports_nodepcheck 1]
        }
    }
}

post-destroot {
    # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=78756
    move ${destroot}${prefix}/share/info/gfortran.info \
         ${destroot}${prefix}/share/info/${mingw_target}-gfortran.info
}
