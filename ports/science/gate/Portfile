# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
PortGroup           cmake 1.0
PortGroup           app 1.0

# TODO: temporary - if checksums are desired
PortGroup           github 1.0
github.setup        mojca gate 635b457f48

## official repository
# fetch.type          git
# git.url             http://git.opengatecollaboration.org/git/opengate-public.git
# git.branch          635b457f48879af5aec42b88d9058a459352e49b

## previous release (would need quite some patches to start working)
# distfiles           gate_v6_2_tar_gz_15843.gz
# master_sites        http://www.opengatecollaboration.org/sites/opengatecollaboration.org/files/gate_release/2012/08/

name                gate
version             6.2
categories          science
maintainers         mojca
license             LGPL
description         GATE description
long_description    GATE is dedicated to numerical simulations in medical imaging and radiotherapy. \
                    It currently supports simulations of Emission Tomography (PET and SPECT), \
                    Computed Tomography (CT) and Radiotherapy experiments.
homepage            http://www.opengatecollaboration.org
platforms           darwin

checksums           rmd160  c83b9d5e16d8527089fa6513732f0281a30d6f11 \
                    sha256  d0b34aa7db1eee7ebb3df2b15d887e63c2a0460d9908f2969e5b1915e5867a4b

set geant.data_versions_9.6 {
    G4NDL              4.2   G4NDL                G4NEUTRONHPDATA
    G4EMLOW            6.32  G4EMLOW              G4LEDATA
    PhotonEvaporation  2.3   G4PhotonEvaporation  G4LEVELGAMMADATA
    RadioactiveDecay   3.6   G4RadioactiveDecay   G4RADIOACTIVEDATA
    G4NEUTRONXS        1.2   G4NEUTRONXS          G4NEUTRONXSDATA
    G4PII              1.3   G4PII                G4PIIDATA
    RealSurface        1.0   RealSurface          G4REALSURFACEDATA
    G4SAIDDATA         1.1   G4SAIDDATA           G4SAIDXSDATA
}
set geant.data_versions_9.5 {
    G4NDL              4.2   G4NDL                G4NEUTRONHPDATA
    G4EMLOW            6.32  G4EMLOW              G4LEDATA
    PhotonEvaporation  2.3   G4PhotonEvaporation  G4LEVELGAMMADATA
    RadioactiveDecay   3.6   G4RadioactiveDecay   G4RADIOACTIVEDATA
    G4ABLA             3.0   G4ABLA               G4ABLADATA
    G4NEUTRONXS        1.1   G4NEUTRONXS          G4NEUTRONXSDATA
    G4PII              1.3   G4PII                G4PIIDATA
    RealSurface        1.0   RealSurface          G4REALSURFACEDATA
}
set geant.datadir ""
set geant.data_versions ""

app.name            Gate
app.executable      Gate
app.icon            ${filespath}/gate.png

worksrcdir          gate_v${version}
configure.dir       ${workpath}/build
build.dir           ${configure.dir}

post-extract {
    file mkdir ${configure.dir}
}
configure.post_args ${worksrcpath}

depends_lib         port:qt4-mac

post-patch {
    # patch examples if needed
    if {[variant_isset examples]} {
        # TODO: this must be done in a better way
        # replace "/vis/open OGLIX" with "/vis/open OGLIQt" (not sure about the difference between OGLIQt and OGLSQt; maybe even just OGL)
        foreach examplefile {gpumacros/ct/mac/visu.mac gpumacros/optical/macro_biolum_cpu.mac gpumacros/optical/macro_biolum_gpu.mac gpumacros/pet/mac/visu.mac gpumacros/photradthera/mac/visu.mac example_CT/classic/visu.mac example_CT/fast/visu.mac example_CT/vrt/visu.mac example_OPTICAL/macro/Visualisation.mac example_PET/PET_CylindricalPET_System.mac example_PET/PET_Ecat_System.mac example_PHANTOM_SOURCE/Voxelized_Phantom_Source/mainMacro.mac example_SPECT/vis.mac example_TimeActivityCurve/vis.mac example_TrackerDetector/visu.mac} {
            reinplace "s|OGLIX|OGLIQt|g" ${worksrcpath}/examples/${examplefile}
            reinplace "s|OGLSX|OGLIQt|g" ${worksrcpath}/examples/${examplefile}
        }
    }
}
pre-destroot {
    set destdocdir ${destroot}${prefix}/share/doc/${name}
    xinstall -m 755 -d ${destdocdir}
    # copy license
    copy ${worksrcpath}/license ${destdocdir}
    # copy examples
    if {[variant_isset examples]} {
        copy ${worksrcpath}/examples ${destdocdir}
    }
    # copy materials database
    set sharedir ${prefix}/share/${name}
    set destsharedir ${destroot}${sharedir}
    xinstall -m 755 -d ${destsharedir}
    copy ${worksrcpath}/GateMaterials.db ${destsharedir}
    copy ${worksrcpath}/GateMaterialsGPU.db ${destsharedir}
    # copy the initial macro file with basic setup
    copy ${filespath}/gui.mac ${destsharedir}
}

post-destroot {
    # TODO: the share folder is already set in another phase and should not repeat
    set sharedir ${prefix}/share/${name}
    # move the binary and set environmental variables
    set destexecutable ${destroot}${prefix}/bin/Gate
    set libexecdir ${prefix}/libexec/${name}
    set destlibexecdir ${destroot}${libexecdir}
    xinstall -m 755 -d ${destlibexecdir}
    move ${destexecutable} ${destlibexecdir}
    system "echo '#!/bin/bash' > ${destexecutable}"
    system "echo export GATEHOME=${sharedir} >> ${destexecutable}"
    system "echo export G4DATADIR=${geant.datadir} >> ${destexecutable}"
    foreach {data.name data.version data.filename data.envvariable} ${geant.data_versions} {
        system "echo export ${data.envvariable}=\\\$G4DATADIR/${data.name}${data.version} >> ${destexecutable}"
    }
    system "echo export LC_NUMERIC=C >> ${destexecutable}"
    system "echo 'if \[\[ \$1 == -psn_* ]]; then' >> ${destexecutable}"
    system "echo ${libexecdir}/Gate --qt >> ${destexecutable}"
    system "echo else >> ${destexecutable}"
    system "echo ${libexecdir}/Gate \\\$@ >> ${destexecutable}"
    system "echo fi >> ${destexecutable}"
    system "chmod 755 ${destexecutable}"

    # TODO:
    # - check if qt_menu.nib is actually needed (it is needed for static qt library)
    # - check that qt_menu.nib actually exists
    # - the second folder should probably come from PortGroup?
    copy $prefix/lib/Resources/qt_menu.nib ${destroot}${applications_dir}/${app.name}.app/Contents
}

variant examples description {Install examples to doc} {
}
variant geant495 conflicts geant496 description {Use Geant4 9.5} {
    depends_lib-append port:geant4-9.5
    # TODO: this can probably be done in a more elegant way
    set geant.data_versions ${geant.data_versions_9.5}
    set geant.datadir ${prefix}/share/Geant4/Data/Geant4.9.5
    # TODO: how to copy this from geant4 suports?
    configure.args-append -DGeant4_DIR=${prefix}/lib/Geant4/Geant4.9.6/Geant4-9.5.2
}
variant geant496 conflicts geant495 description {Use Geant4 9.6} {
    depends_lib-append port:geant4-9.6
    # TODO: this can probably be done in a more elegant way
    set geant.data_versions ${geant.data_versions_9.6}
    set geant.datadir ${prefix}/share/Geant4/Data/Geant4.9.6
    # TODO: how to copy this from geant4 suports?
    configure.args-append -DGeant4_DIR=${prefix}/lib/Geant4/Geant4.9.6/Geant4-9.6.2
}
if {![variant_isset geant495] && ![variant_isset geant496]} {
    default_variants +geant496
}

configure.args-append -DGATE_USE_SYSTEM_CLHEP=ON
