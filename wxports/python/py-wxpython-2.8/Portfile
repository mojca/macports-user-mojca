# -*- coding: utf-8; mode: tcl; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=2:ts=2:sts=2
# $Id$

# TODO: this port doesn't work yet

PortSystem          1.0
PortGroup           python      1.0
PortGroup           wxwidgets   1.0

name                py-wxpython-2.8
version             2.8.12.1
set branch          [join [lrange [split ${version} .] 0 1] .]
categories-append   graphics devel
license             wxwidgets-3.1
platforms           darwin
maintainers         jwa mojca

description         Python interface to the wxWindows cross platform GUI
long_description    wxPython is a GUI toolkit for the Python programming \
                    language. It allows Python programmers to create \
                    programs with a robust, highly functional graphical \
                    user interface, simply and easily. It is implemented \
                    as a Python extension module (native code) that wraps \
                    the popular wxWindows cross platform GUI library, \
                    which is written in C++.

homepage            http://www.wxpython.org/
master_sites        sourceforge:wxpython

distname            wxPython
use_bzip2           yes

checksums           rmd160  94eae06087bdd930e21bf90cc6672f93a1f5a17a \
                    sha256  1f3f153d9f1504c6ce2d2c4b23e940b8f58b81f4cba35cda1a5bb31142243cd0

python.versions     24 25 26 27
python.default_version 27

distfiles           ${distname}-src-${version}${extract.suffix}
dist_subdir         ${distname}/${version}
worksrcdir          ${distname}-src-${version}/wxPython

# extract just the docs and wxPython subdir
extract.post_args   "| tar -xf - ${worksrcdir} ${distname}-src-${version}/docs"

if {$subport != $name} {
    patchfiles              patch-config.py.diff

    variant carbon conflicts gtk description {use 32-bit carbon-based wxWidgets} {
        wxWidgets.use       wxWidgets-2.8
        depends_lib-append  port:wxWidgets-2.8
        # TODO: the following line would end up with --no-user-cfg
        #build.args         WX_CONFIG="${wxWidgets.wxconfig}"
        build.cmd           ${python.bin} setup.py WXPORT="mac" WX_CONFIG="${wxWidgets.wxconfig}"
        destroot.cmd        ${python.bin} setup.py WXPORT="mac" WX_CONFIG="${wxWidgets.wxconfig}"

        # TODO: test if this works on 10.7
        post-patch {
            reinplace       "s|# @@FLAGS1@@|cflags.extend(\[\"-arch\", \"[join [get_canonical_archs] {\", \"-arch\", \"}]\"\])|" ${worksrcpath}/config.py
            reinplace       "s|# @@FLAGS2@@|lflags.extend(\[\"-arch\", \"[join [get_canonical_archs] {\", \"-arch\", \"}]\"\])|" ${worksrcpath}/config.py
            if {${wxWidgets.sdk} != ""} {
                reinplace   "s|# @@FLAGS3@@|cflags.extend(\[\"-isysroot\", \"${wxWidgets.sdk}\"\])|" ${worksrcpath}/config.py
            }
        }
    }

    variant gtk conflicts carbon description {use wxGTK} {
        wxWidgets.use       wxGTK-2.8
        depends_lib-append  port:wxgtk-2.8
        build.cmd           ${python.bin} setup.py WXPORT="gtk2" WX_CONFIG="${wxWidgets.wxconfig}"
        destroot.cmd        ${python.bin} setup.py WXPORT="gtk2" WX_CONFIG="${wxWidgets.wxconfig}"

        post-patch {
            reinplace       "s|# @@FLAGS1@@|cflags.extend(\[\"-arch\", \"[join [get_canonical_archs] {\", \"-arch\", \"}]\"\])|" ${worksrcpath}/config.py
            reinplace       "s|# @@FLAGS2@@|lflags.extend(\[\"-arch\", \"[join [get_canonical_archs] {\", \"-arch\", \"}]\"\])|" ${worksrcpath}/config.py
        }
    }

    # TODO: think a bit more about it
    if {![variant_isset carbon] && ![variant_isset gtk]} {
        # gtk is the default variant on >= 10.7, carbon on <= 10.6
        if {${os.major} >= 11} {
            default_variants-append +gtk
        } else {
            default_variants-append +carbon
        }
    }

    livecheck.type  none
} else {
    post-destroot {
        xinstall -d -m 755 ${destroot}${prefix}/share/doc/
        file copy ${worksrcpath}/docs ${destroot}${prefix}/share/doc/${name}
        file copy ${worksrcpath}/samples ${destroot}${prefix}/share/doc/${name}/examples
    }

    livecheck.type  regex
    livecheck.url   ${homepage}
    livecheck.regex wxPython(?: | \\(classic\\) )(2\\.\[0-9\]+\\.\[0-9\]+\\.\[0-9\]+)
}
